<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on Ray Yang</title><link>https://rayspock.com/tags/golang/</link><description>Recent content in golang on Ray Yang</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><managingEditor>rayspock@protonmail.com (rayspock)</managingEditor><webMaster>rayspock@protonmail.com (rayspock)</webMaster><lastBuildDate>Sun, 04 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://rayspock.com/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Learn Go Pipelines by building keyword search tool</title><link>https://rayspock.com/posts/go-pipeline/</link><pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate><author>rayspock@protonmail.com (rayspock)</author><guid>https://rayspock.com/posts/go-pipeline/</guid><description>Photo by Gioia M. on Unsplash Today&amp;rsquo;s challenge is about working with concurrency in Go - Goroutines, Channels, and Pipelines. The following exercise is from the book, “Mastering Go: Create Golang production applications using network libraries, concurrency, machine learning, and advanced data structures” by Mihalis Tsoukalos. The book not only contains a lot of useful examples and best practices but also helps you understand the capability of Go in depth via well-written descriptions.</description></item></channel></rss>